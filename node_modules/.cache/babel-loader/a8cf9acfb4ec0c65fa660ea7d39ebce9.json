{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teacher.STEP\\\\react-cw\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport InputTag from './component/setInput.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      console.log(\"Hello\"); //let url = await fetch('api.openweathermap.org/data/2.5/weather?q=Kiev,ua&appid=2f340c581eae47ad00eea18ed2125a92&units=metrics')\n      //let data = JSON.parse(url);\n      //console.log(url);\n\n      try {\n        let response = await fetch('api.openweathermap.org/data/2.5/weather?q=Kiev,ua&appid=2f340c581eae47ad00eea18ed2125a92&units=metrics');\n        let responseJson = await response.json();\n        console.log(responseJson);\n        return responseJson;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(InputTag, {\n      methodWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Forecast\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"City:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Temperature:\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\teacher.STEP\\react-cw\\src\\App.js"],"names":["React","InputTag","App","Component","state","temp","undefined","city","getWeather","e","preventDefault","console","log","response","fetch","responseJson","json","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAOC,GAAP,SAAmBF,KAAK,CAACG,SAAzB,CAAoC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED;AAFA,KAF0B;;AAAA,SAMlCE,UANkC,GAMrB,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAFwB,CAGxB;AACA;AACA;;AACA,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wGAAD,CAA1B;AACA,YAAIC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;AACA,eAAOA,YAAP;AACA,OALF,CAKG,OAAME,KAAN,EAAa;AACdN,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD;AACF,KApBiC;AAAA;;AAsBlCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAI,KAAKV,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CAFF,CADF;AAUD;;AAjCiC;;AAoCpC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport InputTag from './component/setInput.js';\n\nclass  App extends React.Component  {\n\n  state = {\n    temp: undefined,\n    city: undefined\n  };\n  getWeather = async (e) => {\n    e.preventDefault();\n    console.log(\"Hello\");\n    //let url = await fetch('api.openweathermap.org/data/2.5/weather?q=Kiev,ua&appid=2f340c581eae47ad00eea18ed2125a92&units=metrics')\n    //let data = JSON.parse(url);\n    //console.log(url);\n    try {\n      let response = await fetch('api.openweathermap.org/data/2.5/weather?q=Kiev,ua&appid=2f340c581eae47ad00eea18ed2125a92&units=metrics');\n      let responseJson = await response.json();\n      console.log(responseJson);\n      return responseJson;\n     } catch(error) {\n      console.error(error);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <InputTag methodWeather = {this.getWeather}/>\n        <div className=\"container\">\n          <h3>Forecast</h3>\n          <p>City:</p>\n          <p>Temperature:</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}